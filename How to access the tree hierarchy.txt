How to access the tree hierarchy generated by the code.

Root node obtains the whole hierarchy at each moment - after each new item is added, its valid.
Object Root is of class Node.

For each node N, you can access its children:

children_indices = N.children_indices

It is a list of indices to nodes representing its children.
It can be for example children_indices=[0, 1, 3].

To get the objects of the Nodes you can call:
index = children_indices[0]
Child = N.getChildrenById(index)

Each node contains:
- children_indices
- objects
If the node is a leaf child.isLeaf(), then it will have an item in objects.

Ps: For each node A you can call A.listAllObjects() and it will pop out the list of all items of all its children (recursively). But tha will just report the clustering of this level (aka root node will in this way report all the items).

So to iterate:

N = Root
for child_idx in N.children_indices:
	child = N.getChildrenById(child_idx)
	if child.isLeaf():
		item = child.objects[0]
		#print item
		print item[NAME_CAT]

This will just go from Root to the three children of it and report them if they are leafs. Ofc this will need to dig deeper into the structure (stack of Nodes to visit - first with just Root, then for each processed node all its children will be pushed to it).